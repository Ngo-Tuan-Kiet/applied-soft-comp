Traceback (most recent call last):
  File "/Users/skojaku-admin/miniforge3/envs/advnetsci/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/skojaku-admin/miniforge3/envs/advnetsci/lib/python3.11/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/skojaku-admin/miniforge3/envs/advnetsci/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/skojaku-admin/miniforge3/envs/advnetsci/lib/python3.11/asyncio/base_events.py", line 650, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/skojaku-admin/miniforge3/envs/advnetsci/lib/python3.11/contextlib.py", line 222, in __aexit__
    await self.gen.athrow(typ, value, traceback)
  File "/Users/skojaku-admin/miniforge3/envs/advnetsci/lib/python3.11/site-packages/nbclient/client.py", line 650, in async_setup_kernel
    yield
  File "/Users/skojaku-admin/miniforge3/envs/advnetsci/lib/python3.11/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/Users/skojaku-admin/miniforge3/envs/advnetsci/lib/python3.11/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/skojaku-admin/miniforge3/envs/advnetsci/lib/python3.11/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from myst_nb import glue
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Create the data
data = {
    'The': [0.2, 0.3, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0],
    'cat': [0.3, 0.2, 0.4, 0.1, 0.0, 0.0, 0.5, 0.2, 0.3],
    'sat': [0.1, 0.2, 0.2, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0],
    'on': [0.1, 0.1, 0.1, 0.2, 0.2, 0.2, 0.0, 0.0, 0.0],
    'the': [0.1, 0.0, 0.0, 0.2, 0.2, 0.4, 0.0, 0.0, 0.0],
    'mat': [0.1, 0.0, 0.1, 0.2, 0.4, 0.2, 0.0, 0.0, 0.0],
    'It': [0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.2, 0.4, 0.3],
    'was': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.2, 0.2],
    'tired': [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.2, 0.2]
}

# Create DataFrame with proper index
df = pd.DataFrame(data,
                 index=['The', 'cat', 'sat', 'on', 'the', 'mat', 'It', 'was', 'tired'])

# Set up the matplotlib figure
plt.figure(figsize=(5, 5))

# Create heatmap with seaborn
sns.heatmap(df,
            annot=True,  # Show numbers in cells
            fmt='.1f',   # Format numbers to 1 decimal place
            cmap='cividis',  # Yellow-Orange-Red color scheme
            square=True,    # Make cells square
            cbar_kws={'label': 'Probability'},
            vmin=0,         # Minimum value for color scaling
            vmax=0.5)       # Maximum value for color scaling

# Customize the plot
plt.title('Word Transition Probabilities', pad=20, size=16)
plt.xlabel('Next Word', size=12)
plt.ylabel('Current Word', size=12)

# Rotate x-axis labels for better readability
plt.xticks(rotation=0, ha='right')
plt.yticks(rotation=0)

# Adjust layout to prevent label cutoff
plt.tight_layout()

# Show the plot
plt.show()
glue("cdf_fig", fig, display=False)

# Display the DataFrame with styling (for numerical comparison)
#df.style.background_gradient(cmap='YlOrRd', vmin=0, vmax=0.5)\
#    .format('{:.1f}')\
#    .set_caption('Word Transition Probabilities Table')
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[1], line 50[0m
[1;32m     48[0m [38;5;66;03m# Show the plot[39;00m
[1;32m     49[0m plt[38;5;241m.[39mshow()
[0;32m---> 50[0m glue([38;5;124m"[39m[38;5;124mcdf_fig[39m[38;5;124m"[39m, fig, display[38;5;241m=[39m[38;5;28;01mFalse[39;00m)

[0;31mNameError[0m: name 'fig' is not defined

